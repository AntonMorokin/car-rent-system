version: "3.4"
# noinspection ComposeUnknownKeys
name: "cms"

services:
  postgres:
    container_name: pgsql
    image: postgres:14.4-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
    ports:
      - "5432:5432"
    volumes:
      - D:\repos\ContainersData\postgres:/var/lib/postgresql/data

  mongo:
    container_name: mongodb
    image: mongo:6.0-focal
    environment:
      - MONGO_INITDB_ROOT_USERNAME=madmin
      - MONGO_INITDB_ROOT_PASSWORD=4321
    ports:
      - "27017:27017"
    volumes:
      - D:\repos\ContainersData\mongo:/data/db

  clients.webapi:
    container_name: clients-webapi
    image: ${DOCKER_REGISTRY-}clientswebapi
    build:
      context: .
      dockerfile: Clients/Clients.WebApi/Dockerfile
    depends_on:
      - postgres
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000
      - CLIENTS_Db__ConnectionString=Host=postgres;Database=crs;Username=postgres;Password=1234
    ports:
      - "5000:5000"

  cars.webapi:
    container_name: cars-webapi
    image: ${DOCKER_REGISTRY-}carswebapi
    build:
      context: .
      dockerfile: Cars/Cars.WebApi/Dockerfile
    depends_on:
      - postgres
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:6000
      - CARS_Db__ConnectionString=Host=postgres;Database=crs;Username=postgres;Password=1234
    ports:
      - "6000:6000"

  rides.webapi:
    container_name: rides-webapi
    image: ${DOCKER_REGISTRY-}rideswebapi
    build:
      context: .
      dockerfile: Rides/Rides.WebApi/Dockerfile
    depends_on:
      - mongo
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:7000
      - RIDES_Db__ConnectionString=mongodb://madmin:4321@mongo:27017
    ports:
      - "7000:7000"